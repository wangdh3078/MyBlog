@model MyBlog.Web.Areas.Admin.Models.BlogViewModel
@{
    ViewBag.Title = "AddOrEditArticle";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
<link href="~/Scripts/plugins/editor.md/css/editormd.min.css" rel="stylesheet" />
<link href="~/Scripts/plugins/bootstrap-select-1.12.4/dist/css/bootstrap-select.min.css" rel="stylesheet" />
<link href="~/Scripts/plugins/icheck-1.x/skins/all.css" rel="stylesheet" />
<script src="~/Scripts/plugins/editor.md/editormd.min.js"></script>
<script src="~/Scripts/plugins/bootstrap-select-1.12.4/dist/js/bootstrap-select.min.js"></script>
<script src="~/Scripts/plugins/bootstrap-select-1.12.4/js/i18n/defaults-zh_CN.js"></script>
<script src="~/Scripts/plugins/icheck-1.x/icheck.min.js"></script>
<div class="container-fluid" style="margin-top:20px;">
    <form>
        @Html.AntiForgeryToken()
        <input type="hidden" value="@Model.Id" id="id" />
        <div class="row form-group">
            <div class="col-lg-1 col-md-1 col-sm-12 col-xs-12">
                <span>标题：</span>
            </div>
            <div class="col-lg-11 col-md-11 col-sm-12 col-xs-12">
                <input type="text" class="form-control" id="title" placeholder="请输入标题" value="@Model.Title" />
            </div>
        </div>
        <div class="row form-group">
            <div class="col-lg-1 col-md-1 col-sm-12 col-xs-12">
                <span>分类：</span>
            </div>
            <div class="col-lg-11 col-md-11 col-sm-12 col-xs-12">
                @Html.Action("CreateSelect", "Common", new { id = "classify", source = ViewBag.Classify, value = "Id", text = "Name", @class = "selectpicker form-control", selectedValue = string.Join(",", Model.Classify.Select(t => t.Id)) })
            </div>
        </div>
        <div class="row form-group">
            <div class="col-lg-1 col-md-1 col-sm-12 col-xs-12">
                <span>标签：</span>
            </div>
            <div class="col-lg-11 col-md-11 col-sm-12 col-xs-12">
                @Html.Action("CreateSelect", "Common", new { id = "tags", source = ViewBag.Tags, value = "Id", text = "Name", @class = "selectpicker form-control", isMulti = true, selectedValue = string.Join(",", Model.Tags.Select(t => t.Id)) })
            </div>
        </div>
        <div class="row form-group">
            <div class="col-lg-1 col-md-1 col-sm-12 col-xs-12">
                <span>内容：</span>
            </div>
            <div class="col-lg-11 col-md-11 col-sm-12 col-xs-12">
                <div id="editormd">
                    <textarea style="display:none;">@Model.ShortContext</textarea>
                </div>
            </div>

        </div>
        <div class="row form-group">
            <div class="col-lg-1 col-md-1 col-sm-12 col-xs-12">
                <span>状态：</span>
            </div>
            <div class="col-lg-11 col-md-11 col-sm-12 col-xs-12">
                <input type="radio" id="release" name="iCheck" @((Model.Id == 0 || Model.IsPublished) ? "checked" : "") value="1">
                <label for="release" style="margin-right:20px;">发布</label>
                <input type="radio" id="draft" name="iCheck" @((Model.Id != 0 && !Model.IsPublished) ? "checked" : "") value="0">
                <label for="draft">存为草稿</label>
            </div>

        </div>
        <div class="row form-group">
            <div class="col-lg-offset-6 col-md-offset-6 col-sm-offset-6 col-xs-offset-6">
                <input type="button" value="提交" id="btn_submit" class="btn btn-primary" />
            </div>
        </div>
    </form>
</div>
<script type="text/javascript">
    $(function () {
        $('input[name="iCheck"]').iCheck({
            checkboxClass: 'icheckbox_square-green',
            radioClass: 'iradio_square-green',
            increaseArea: '20%' // optional
        });
        var editor = editormd("editormd", {
            width: "100%",
            height: 450,
            path: '/Scripts/plugins/editor.md/lib/',
            emoji: true,
            taskList: true,
            tocm: true,         // Using [TOCM]
            tex: true,                   // 开启科学公式TeX语言支持，默认关闭
            flowChart: true,             // 开启流程图支持，默认关闭
            sequenceDiagram: true,       // 开启时序/序列图支持，默认关闭,
            imageUpload: true,
            imageFormats: ["jpg", "jpeg", "gif", "png", "bmp", "webp"],
            imageUploadURL: "/Common/FileUpload",
            saveHTMLToTextarea: true,
            //上传的后台只需要返回一个 JSON 数据，结构如下：
            // {
            //    success: 0 | 1,           // 0 表示上传失败，1 表示上传成功
            //    message: "提示的信息，上传成功或上传失败及错误信息等。",
            //    url: "图片地址"        // 上传成功时才返回
            //}
            onresize: function () {
                //this.setMarkdown("state.loaded > bind onresize > window.onresize, editormd watch/unwatch/fullscreen/fullscreenExit/toolbar show|hide " + (new Date).getTime());
                //console.log("onresize =>", this, this.id, this.settings);
            }
        });

        $("#btn_submit").click(function () {
            //console.log(editor.getMarkdown());       // 获取 Markdown 源码
            //console.log(editor.getHTML());           // 获取 Textarea 保存的 HTML 源码
            //console.log(editor.getPreviewedHTML());  // 获取预览窗口里的 HTML，在开启 watch 且没有开启 saveHTMLToTextarea 时使用
            var tags = [];
            var selectedTags = $("#tags").val();
            for (var i = 0; i < selectedTags.length; i++) {
                tags.push({ Id: selectedTags[i] });
            }
            var token = $('input[name="__RequestVerificationToken"]').val();
            var model = {
                Id: $("#id").val(),
                Title: $("#title").val(),
                Classify: $("#classify").val() == 0 ? [] : [{ Id: $("#classify").val() }],
                Tags: tags,
                ShortContext: editor.getMarkdown(),
                Context: editor.getHTML(),
                IsPublished: $("input[name='iCheck']:checked").val() == 1 ? true : false,
                "__RequestVerificationToken": token
            };
            $.ajax({
                url: "/Admin/ArticleManage/AddOrEditArticle",
                type: "POST",
                data: model,
                success: function (data) {
                    debugger;
                },
                error: function (data) {
                    debugger;
                }
            });
        });
    });

</script>
